---
- name: prepare config dir
  file: path=~/.config/vifm/colors state=directory

- name: prepare ptpython config dir
  file: path=~/.ptpython state=directory

- name: prepare direnv config dir
  file: path=~/.config/direnv state=directory

- name: make dotfiles symlink
  file: >-
    src={{ '/'.join([dotfiles_dir, item]) }}
    dest=~/{{ item }}
    state=link
    force=yes
  with_items:
    - .config/direnv/direnvrc
    - .config/gocode
    - .config/ipython
    - .config/peco
    - .config/powerline
    - .config/ranger
    - .config/vifm/colors/nord.vifm
    - .config/vifm/vifmrc
    - .config/yamllint
    - .editrc
    - .gitconfig
    - .golangci.yml
    - .grcat
    - .inputrc
    - .iterm2
    - .iterm2_shell_integration.zsh
    - .jsbeautifyrc
    - .jshintrc
    - .proverc
    - .ptconfig.toml
    - .ptpython/config.py
    - .tern-project
    - .tmux
    - .tmux.conf
    - .vim
    - .vimrc_first.vim
    - .zlogin
    - .zlogout
    - .zprezto
    - .zpreztorc
    - .zprofile
    - .zshenv
    - .zshrc

- name: make directory for Neovim
  file: dest=~/.config/nvim state=directory

- name: make init.vim for Neovim
  file: >-
    src={{ dotfiles_dir }}/.vim/vimrc
    dest=~/.config/nvim/init.vim
    state=link
    force=yes

- file: >-
    dest=~/.local/share/nvim/{{ item }}
    state=directory
    mode=0700
  with_items:
    - backup
    - swap
    - undo

- name: symlink dircolors
  file: >-
    src={{ dotfiles_dir }}/submodules/nord-dircolors/src/dir_colors
    dest=~/.dir_colors
    state=link
    force=yes

- name: create karabiner directory
  file: path='~/.config/karabiner/assets/complex_modifications' state=directory
  when: ansible_system == 'Darwin'
- name: create karabiner setting
  copy: >-
    src=karabiner/{{ item }}.json
    dest='~/.config/karabiner/assets/complex_modifications/{{ item }}.json'
  when: ansible_system == 'Darwin'
  with_items:
    - contexts
    - double
    - edgeview2
    - emacs
    - escape
    - excel
    - japanese
    - return_or_enter
    - slack
    - spotlight
    - spreadsheets
    - tab
    - tmux
    - tweetdeck

- file: path=~/.ssh/config state=touch mode=0600
  changed_when: false
- lineinfile: dest=~/.ssh/config line='Host *' state=present
- lineinfile: >-
    dest=~/.ssh/config
    line='  ServerAliveInterval 120'
    insertafter='^Host \*$'

- git: >-
    repo=https://{{ item }}
    dest=~/.go/src/{{ item }}
  with_items:
    - github.com/takaaki-kasai/git-foresta
  register: git_sync

- file: path=~/.ghg/bin state=directory
- file: >-
    src=~/git/github.com/takaaki-kasai/git-foresta/git-foresta
    dest=~/.ghg/bin/git-foresta
    state=link
    force=yes

- name: prepare iTerm2 script directory
  file: >-
    path='~/Library/Application Support/iTerm2/Scripts/Autolaunch'
    state=directory

- name: set up sample components in iTerm2 status bar
  file: >-
    src={{ dotfiles_dir }}/ansible/files/iterm2/{{ item }}.py
    dest='~/Library/Application Support/iTerm2/Scripts/Autolaunch/{{ item }}.py'
    state=link
    force=yes
  with_items:
    - escindicator
    - jsonpretty
    - load_average
    - mousemode
    - ping
    - statusbar

- git: >-
    repo=https://{{ item }}
    dest=~/.go/src/{{ item }}
  with_items:
    - github.com/delphinus/iterm2-imap-status

- name: set up IMAP status component in iTerm2 dir
  file: >-
    src=~/.go/src/github.com/delphinus/iterm2-imap-status/imap_status.py
    dest='~/Library/Application Support/iTerm2/Scripts/Autolaunch/imap_status.py'
    state=link
    force=yes

- name: prepare ctags setting directory
  file: path=~/.ctags.d state=directory

- name: download setting for ctags on TypeScript
  get_url: >-
    url=https://github.com/jb55/typescript-ctags/raw/master/.ctags
    dest=~/.ctags.d/typescript.ctags

# vim:se et:
